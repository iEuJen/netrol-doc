(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(t,s,e){"use strict";e.r(s);var r=e(42),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"interceptor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interceptor"}},[t._v("#")]),t._v(" Interceptor")]),t._v(" "),e("p",[t._v("用于设置请求和响应拦截器的对象。")]),t._v(" "),e("h3",{attrs:{id:"interceptor-request-设置请求拦截器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interceptor-request-设置请求拦截器"}},[t._v("#")]),t._v(" interceptor.request 设置请求拦截器")]),t._v(" "),e("blockquote",[e("p",[t._v("interceptor.request( interceptor: (config: object) => object )")])]),t._v(" "),e("p",[t._v("interceptor.request 传入一个函数作为请求拦截器，函数接收一个 config 对象，并可以对其进行一些修改，但最终必须将其返回。")]),t._v(" "),e("p",[t._v("config 的属性详细如下：")]),t._v(" "),e("ul",[e("li",[t._v("apiName "),e("code",[t._v("string")]),t._v(" apis 上定义的接口名")]),t._v(" "),e("li",[t._v("data "),e("code",[t._v("any")]),t._v(" 经过 transformData 处理的数据")]),t._v(" "),e("li",[t._v("headers "),e("code",[t._v("object")]),t._v(" 请求头")]),t._v(" "),e("li",[t._v("method "),e("code",[t._v("string")]),t._v(" 请求方法")]),t._v(" "),e("li",[t._v("timeout "),e("code",[t._v("number")]),t._v(" 超时时间")]),t._v(" "),e("li",[t._v("url "),e("code",[t._v("string")]),t._v(" 接口链接")])]),t._v(" "),e("h4",{attrs:{id:"使用范例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用范例"}},[t._v("#")]),t._v(" 使用范例")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" interceptor "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'netrol'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置")]),t._v("\ninterceptor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对 config 进行一些操作")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" config\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"interceptor-response-设置响应拦截器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interceptor-response-设置响应拦截器"}},[t._v("#")]),t._v(" interceptor.response 设置响应拦截器")]),t._v(" "),e("blockquote",[e("p",[t._v("interceptor.response( interceptor: (res: object) => void | object )")])]),t._v(" "),e("p",[t._v("interceptor.response 传入一个函数作为响应拦截器，函数接收一个 res 对象，并可以对其进行一些修改。\n返回结果将被 leach 接收到，如果不返回或者返回值为空，则 netrol 会退出 promise 链，并 reject 一次 type 为 'error.ErrorType.STOP'(0) 的 错误。")]),t._v(" "),e("p",[t._v("netrol "),e("RouterLink",{attrs:{to:"/book/adv/errorType.html"}},[t._v("对错误返回进行了分类设计")]),t._v("，因此建议需要对后端数据做判断的操作放在 interceptor.response 中进行。\n当结果不想给 request 接受到的时候，可以直接返回一个空值。")],1),t._v(" "),e("p",[t._v("res 的属性详细如下：")]),t._v(" "),e("ul",[e("li",[t._v("body "),e("code",[t._v("any")]),t._v(" 后端返回的数据")]),t._v(" "),e("li",[t._v("status "),e("code",[t._v("number")]),t._v(" http 状态码")]),t._v(" "),e("li",[t._v("statusText "),e("code",[t._v("string")]),t._v(" 响应状态对应的文本信息")]),t._v(" "),e("li",[t._v("xhr "),e("code",[t._v("XMLHttpReques")]),t._v(" XMLHttpRequest 实例对象")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" interceptor "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'netrol'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置")]),t._v("\ninterceptor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("response")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 符合条件 */")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对 res 进行一些操作")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);