(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{362:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"progresslistener"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#progresslistener"}},[t._v("#")]),t._v(" ProgressListener")]),t._v(" "),a("p",[t._v("用于监听上传/下载进度的对象。")]),t._v(" "),a("h3",{attrs:{id:"progresslistener-upload-上传监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#progresslistener-upload-上传监听器"}},[t._v("#")]),t._v(" progressListener.upload 上传监听器")]),t._v(" "),a("blockquote",[a("p",[t._v("progressListener.upload(apiName: string, exec: Function)")])]),t._v(" "),a("p",[t._v("上传监听器接受两个参数，第一个参数为要监听的 apiName，第二个参数为触发监听的方法。\nexec 执行方法接收一个 evt 参数，用于判断监听类型，以及进度状态。")]),t._v(" "),a("h4",{attrs:{id:"使用范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用范例"}},[t._v("#")]),t._v(" 使用范例")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" progressListener "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'netrol'")]),t._v("\nprogressListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("upload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * evt 对象\n   * {\n      type: string,\n      event: ProgressEvent,\n      status: number,\n      statusText: string,\n      ProgressStatus: object\n      total: number\n      loaded: number\n   * }\n   */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"progresslistener-download-下载监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#progresslistener-download-下载监听器"}},[t._v("#")]),t._v(" progressListener.download 下载监听器")]),t._v(" "),a("blockquote",[a("p",[t._v("progressListener.download(apiName: string, exec: Function)")])]),t._v(" "),a("p",[t._v("下载监听器使用同上载监听器一样。接受两个参数，第一个参数为要监听的 apiName，第二个参数为触发监听的方法。\nexec 执行方法接收一个 event 参数，用于判断监听类型，以及进度状态。")]),t._v(" "),a("h4",{attrs:{id:"使用范例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用范例-2"}},[t._v("#")]),t._v(" 使用范例")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" progressListener "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'netrol'")]),t._v("\nprogressListener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("download")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * evt 对象\n   * {\n      type: string,\n      event: ProgressEvent,\n      status: number,\n      statusText: string,\n      ProgressStatus: object\n      total: number\n      loaded: number\n   * }\n   */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"evt-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evt-对象"}},[t._v("#")]),t._v(" evt 对象")]),t._v(" "),a("p",[t._v("evt 是上传/下载监听器的回调参数，它包括以下属性")]),t._v(" "),a("ul",[a("li",[t._v("type "),a("code",[t._v("string")]),t._v(", 监听类型，值为 upload/download")]),t._v(" "),a("li",[t._v("event "),a("code",[t._v("ProgressEvent")]),t._v(", ProgressEvent 对象，是 xhr 响应事件的回调参数")]),t._v(" "),a("li",[t._v("status "),a("code",[t._v("number")]),t._v(", 当前进度状态，其值与 ProgressStatus 枚举对象对应")]),t._v(" "),a("li",[t._v("statusText "),a("code",[t._v("string")]),t._v(", 当前进度状态的文字描述")]),t._v(" "),a("li",[t._v("ProgressStatus "),a("code",[t._v("object")]),t._v(", 进度状态的枚举，其包含：\n"),a("ul",[a("li",[t._v("FAIL = 0,")]),t._v(" "),a("li",[t._v("SUCCESS = 1,")]),t._v(" "),a("li",[t._v("PROGRESS = 2,")]),t._v(" "),a("li",[t._v("START = 3,")]),t._v(" "),a("li",[t._v("CANCEL = 4,")]),t._v(" "),a("li",[t._v("TIMEOUT = 5")])])]),t._v(" "),a("li",[t._v("total "),a("code",[t._v("number")]),t._v(", 当 status === ProgressStatus.PROGRESS 才有的属性，为上传/下载文件的总大小，来自 evt.event.total")]),t._v(" "),a("li",[t._v("loaded "),a("code",[t._v("number")]),t._v(", 当 status === ProgressStatus.PROGRESS 才有的属性，为已经上传/下载文件的大小，来自 evt.event.loaded")])])])}),[],!1,null,null,null);s.default=n.exports}}]);